{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","textarea","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","prototypes","PropTypes","string","defaultProps","about","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7e3f6191.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.about}\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable DarkMode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.prototypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  //agar props define nai kiya hai app.js file me toh ye render hoga\r\n  about: \"About text here\",\r\n};\r\n","import React, {useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  \r\n  const handleUpClick = () => {\r\n    // console.log(\"handleUpClick event fired!\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase.\", \"success\");\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"onChange event fired!\")\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const handleLowClick = () => {\r\n    // console.log(\"handleLowClick event fired!\")\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase.\", \"success\");\r\n\r\n  }\r\n\r\n  const handleClear = () => {\r\n    let clearText = (\"\");\r\n    setText(clearText);\r\n    props.showAlert(\"Text cleared.\", \"success\");\r\n\r\n  }\r\n\r\n  const handleCopy = () => {\r\n    let textarea = document.getElementById(\"textarea\");\r\n    textarea.select();\r\n    navigator.clipboard.writeText(textarea.value);\r\n    props.showAlert(\"Text Copied to Clipboard.\", \"success\");\r\n\r\n  }\r\n\r\n  const handleExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \")); \r\n    props.showAlert(\"Extra spaces removed.\", \"success\");\r\n\r\n  }\r\n\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"container\"  style={{color : props.mode==='light'?'black':'white'}}>\r\n        <h3 className=\"mt-5\" style={{color : props.mode==='light'?'black':'white'}}>{props.heading} </h3>\r\n        <textarea className=\"form-control\" rows=\"8\" id=\"textarea\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'black', color : props.mode==='light'?'black':'white'}}></textarea>\r\n        <button className=\"btn btn-secondary mt-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-secondary mt-2 ms-2\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-secondary mt-2 ms-2\" onClick={handleClear}>Clear Text</button>\r\n        <button className=\"btn btn-secondary mt-2 ms-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-secondary mt-2 ms-2\" onClick={handleExtraSpace}>Remove Extra Spaces</button>\r\n      </div>\r\n      <div className=\"container\"  style={{color : props.mode==='light'?'black':'white'}}>\r\n        <h3 className=\"mt-5\">Your text summary</h3>\r\n        <p>{text.split(\" \").length-1} words and {text.length} characters.</p>\r\n        <p>It will take {0.008 * text.split(\" \").length} minutes to read.</p>\r\n        <h4>Preview</h4>\r\n        <p>{text.length>0?text:\"Enter some text in the textbox to preview it here!\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && (\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled.\", \"success\");\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark Mode has been enabled.\", \"success\");\n    }\n  };\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(\"\");\n    }, 1500);\n  };\n\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          about=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        {/* <Switch>\n          <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm\n              heading=\"Enter the text to analyse\"\n              mode={mode}\n              showAlert={showAlert}\n            />\n          {/* </Route>\n        </Switch>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}